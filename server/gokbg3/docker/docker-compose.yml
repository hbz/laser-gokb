version: "2.0"

volumes:
  pgdata:
  mysqldata:
  esdata:
  virtuoso:

services:
  #
  # docker exec -it pg psql -u postgres
  #
  postgres:
    container_name: pg
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pa55w0rd
      POSTGRES_DB: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./dbinit:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    networks:
      default:
        aliases:
          - pghost
    

  #  mysql:
  #    container_name: mysql
  #    image: mariadb:latest
  #    restart: always
  #    environment:
  #      MYSQL_ROOT_PASSWORD: example
  #    volumes:
  #      - mysqldata:/var/lib/mysql

  # https://www.elastic.co/guide/en/elasticsearch/reference/5.6/docker.html
  # https://github.com/k-int/KBPlusG3/blob/dev-integration/SETUP-ES-DOCKER.txt
  es5:
    container_name: es5
    image: docker.elastic.co/elasticsearch/elasticsearch:5.5.3
    restart: always
    environment:
      http.host: 0.0.0.0
      transport.host: 0.0.0.0
      cluster.name: elasticsearch
      xpack.security.enabled: "false"
    ports:
      - 9200:9200 
      - 9300:9300
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      default:
        aliases:
          - eshost


  # Converted from 
  # docker run -d --restart always --hostname rabbitmq -p 15672:15672 -p 5672:5672 --name rabbitmq -e RABBITMQ_DEFAULT_USER=adm -e RABBITMQ_DEFAULT_PASS=admpass rabbitmq:management
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    restart: always
    ports:
      - 15672:15672 
      - 5672:5672
    environment:
      - RABBITMQ_DEFAULT_USER=adm
      - RABBITMQ_DEFAULT_PASS=admpass 

  # https://github.com/tenforce/docker-virtuoso  (7.2.4 is latest)
  virtuoso:
    container_name: virtuoso
    image: tenforce/virtuoso:1.3.1-virtuoso7.2.4
    environment:
      SPARQL_UPDATE: "true"
      DEFAULT_GRAPH: "http://www.example.com/my-graph"
    volumes:
      - virtuoso:/data
    ports:
      - "8890:8890"

  gokb:
    container_name: gokb
    image: knowint/gokbg3:8.0.0
    environment:
      TEST: "something"
    ports:
            - "8091:8080" # Export container 8080 as 8091 locally
 
#  adminer:
#    image: adminer
#    restart: always
#    ports:
#      - 8080:8080
